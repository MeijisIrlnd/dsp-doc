#!/bin/sh

if [ -z "$1" -o -z "$2" ]
then
	echo "Usage:\n\tgit sub-branch <sub-dir> <branch> <?message-prompt>"
	exit 1;
fi

sumDir="."
tree=`git cat-file commit HEAD | grep '^tree ' | awk '{print \$2}'`

#echo "${tree}\t$sumDir"

for dir in `echo "$1" | tr "/" "\n"`
do
	sumDir="$sumDir/$dir"
	tree=`git cat-file -p "$tree" | grep "\t${dir}$" | awk '{print $3}'`
	if [ -z "$tree" ]
	then
		echo "Could not find sub-dir: ${sumDir}"
		exit 1
	fi

	#echo "${tree}\t$sumDir"
done

if (git rev-parse --verify "$2" &> /dev/null)
then
	echo "$3\n\n# new branch: $2\n" > .git/.SUB_BRANCH_MSG
	$EDITOR .git/.SUB_BRANCH_MSG
	commitMsg=`cat .git/.SUB_BRANCH_MSG | sed '/^#/d'`
	newCommit=`cat .git/.SUB_BRANCH_MSG | git commit-tree "${tree}" -p "$2" -m "$commitMsg"`
	#echo "new commit: $newCommit"
	git branch -f "$2" "$newCommit"
else
	echo "$3\n\n# new branch: $2\n" > .git/.SUB_BRANCH_MSG
	$EDITOR .git/.SUB_BRANCH_MSG
	commitMsg=`cat .git/.SUB_BRANCH_MSG | sed '/^#/d'`

	newCommit=`cat .git/.SUB_BRANCH_MSG | git commit-tree "${tree}" -m "$commitMsg"`
	#echo "new commit: $newCommit"
	git branch -f "$2" "$newCommit"
fi
